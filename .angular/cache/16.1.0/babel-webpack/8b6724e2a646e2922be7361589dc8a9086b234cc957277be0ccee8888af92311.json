{"ast":null,"code":"import { SingleTrack } from '../single-track';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class SingleTrackFormComponent {\n  constructor() {\n    //powers = ['Really Smart', 'Super Flexible',\n    //          'Super Hot', 'Weather Changer']; 240\n    this.model = new SingleTrack(\"\", \"\", \"\", 0);\n    this.submitted = false;\n  }\n  onSubmit() {\n    this.submitted = true;\n  }\n  scrobbleTrack() {\n    console.log(\"Scrobbling request received\");\n    this.model = new SingleTrack(\"\", \"\", \"\", 0);\n  }\n  sampleTrack() {\n    const sampleTrack = new SingleTrack(\"The Beatles\", \"The Beatles\", \"While My Guitar Gently Weeps\", 440);\n    console.log('My sample song is called ' + sampleTrack.title); // \"My hero is called SkyDog\"\n    return sampleTrack;\n  }\n  //////// NOT SHOWN IN DOCS ////////\n  // Reveal in html:\n  //   Name via form.controls = {{showFormControls(heroForm)}}\n  showFormControls(form) {\n    return form && form.controls.name && form.controls.name.value; // Dr. IQ\n  }\n}\n\nSingleTrackFormComponent.ɵfac = function SingleTrackFormComponent_Factory(t) {\n  return new (t || SingleTrackFormComponent)();\n};\nSingleTrackFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SingleTrackFormComponent,\n  selectors: [[\"app-single-track-form\"]],\n  decls: 29,\n  vars: 8,\n  consts: [[1, \"container\"], [3, \"hidden\"], [3, \"ngSubmit\"], [\"singleTrackForm\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"artist\"], [\"type\", \"text\", \"id\", \"artist\", \"required\", \"\", \"name\", \"artist\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"artist\", \"ngModel\"], [1, \"alert\", \"alert-danger\", 3, \"hidden\"], [\"for\", \"album\"], [\"type\", \"text\", \"id\", \"album\", \"required\", \"\", \"name\", \"album\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"album\", \"ngModel\"], [\"for\", \"title\"], [\"type\", \"text\", \"id\", \"title\", \"required\", \"\", \"name\", \"title\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"title\", \"ngModel\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", 3, \"disabled\", \"click\"]],\n  template: function SingleTrackFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\");\n      i0.ɵɵtext(3, \"Submit a Single Track\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"form\", 2, 3);\n      i0.ɵɵlistener(\"ngSubmit\", function SingleTrackFormComponent_Template_form_ngSubmit_4_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(6, \"div\", 4)(7, \"label\", 5);\n      i0.ɵɵtext(8, \"Artist\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"input\", 6, 7);\n      i0.ɵɵlistener(\"ngModelChange\", function SingleTrackFormComponent_Template_input_ngModelChange_9_listener($event) {\n        return ctx.model.artist = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 8);\n      i0.ɵɵtext(12, \" Artist is required \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"div\", 4)(14, \"label\", 9);\n      i0.ɵɵtext(15, \"Album\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"input\", 10, 11);\n      i0.ɵɵlistener(\"ngModelChange\", function SingleTrackFormComponent_Template_input_ngModelChange_16_listener($event) {\n        return ctx.model.album = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"div\", 8);\n      i0.ɵɵtext(19, \" Album is required \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(20, \"div\", 4)(21, \"label\", 12);\n      i0.ɵɵtext(22, \"Title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"input\", 13, 14);\n      i0.ɵɵlistener(\"ngModelChange\", function SingleTrackFormComponent_Template_input_ngModelChange_23_listener($event) {\n        return ctx.model.title = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"div\", 8);\n      i0.ɵɵtext(26, \" Title is required \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(27, \"button\", 15);\n      i0.ɵɵlistener(\"click\", function SingleTrackFormComponent_Template_button_click_27_listener() {\n        return ctx.scrobbleTrack();\n      });\n      i0.ɵɵtext(28, \"Submit\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(5);\n      const _r1 = i0.ɵɵreference(10);\n      const _r2 = i0.ɵɵreference(17);\n      const _r3 = i0.ɵɵreference(24);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"hidden\", ctx.submitted);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngModel\", ctx.model.artist);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"hidden\", _r1.valid || _r1.pristine);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.model.album);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"hidden\", _r2.valid || _r2.pristine);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.model.title);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"hidden\", _r3.valid || _r3.pristine);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", !_r0.form.valid);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.NgModel, i1.NgForm],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["SingleTrack","SingleTrackFormComponent","constructor","model","submitted","onSubmit","scrobbleTrack","console","log","sampleTrack","title","showFormControls","form","controls","name","value","selectors","decls","vars","consts","template","SingleTrackFormComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","SingleTrackFormComponent_Template_form_ngSubmit_4_listener","SingleTrackFormComponent_Template_input_ngModelChange_9_listener","$event","artist","SingleTrackFormComponent_Template_input_ngModelChange_16_listener","album","SingleTrackFormComponent_Template_input_ngModelChange_23_listener","SingleTrackFormComponent_Template_button_click_27_listener","ɵɵadvance","ɵɵproperty","_r1","valid","pristine","_r2","_r3","_r0"],"sources":["/Users/cristianleonardovaldeschamorro/Dev/Projects/web-basic-scrobbler/src/app/single-track-form/single-track-form.component.ts","/Users/cristianleonardovaldeschamorro/Dev/Projects/web-basic-scrobbler/src/app/single-track-form/single-track-form.component.html"],"sourcesContent":["import { Component } from '@angular/core';\n\nimport { SingleTrack } from '../single-track';\n\n@Component({\n  selector: 'app-single-track-form',\n  templateUrl: './single-track-form.component.html',\n  styleUrls: ['./single-track-form.component.css']\n})\nexport class SingleTrackFormComponent {\n\n  //powers = ['Really Smart', 'Super Flexible',\n  //          'Super Hot', 'Weather Changer']; 240\n\n  model = new SingleTrack(\"\", \"\", \"\", 0);\n\n  submitted = false;\n\n  onSubmit() { this.submitted = true; }\n\n  scrobbleTrack() {\n    console.log(\"Scrobbling request received\");\n    this.model = new SingleTrack(\"\", \"\", \"\", 0);\n  }\n\n  sampleTrack(): SingleTrack {\n    const sampleTrack =  new SingleTrack(\"The Beatles\", \"The Beatles\", \"While My Guitar Gently Weeps\", 440);\n    console.log('My sample song is called ' + sampleTrack.title); // \"My hero is called SkyDog\"\n    return sampleTrack;\n  }\n\n  //////// NOT SHOWN IN DOCS ////////\n\n  // Reveal in html:\n  //   Name via form.controls = {{showFormControls(heroForm)}}\n  showFormControls(form: any) {\n    return form && form.controls.name &&\n    form.controls.name.value; // Dr. IQ\n  }\n}\n","<div class=\"container\">\n  <div [hidden]=\"submitted\">\n    <h1>Submit a Single Track</h1>\n    <form (ngSubmit)=\"onSubmit()\" #singleTrackForm=\"ngForm\">\n      <div class=\"form-group\">\n        <label for=\"artist\">Artist</label>\n        <input type=\"text\" class=\"form-control\" id=\"artist\"\n               required\n               [(ngModel)]=\"model.artist\" name=\"artist\" #artist=\"ngModel\">\n        <div [hidden]=\"artist.valid || artist.pristine\"\n             class=\"alert alert-danger\">\n          Artist is required\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"album\">Album</label>\n        <input type=\"text\" class=\"form-control\" id=\"album\" required\n               [(ngModel)]=\"model.album\" name=\"album\" #album=\"ngModel\">\n        <div [hidden]=\"album.valid || album.pristine\"\n             class=\"alert alert-danger\">\n          Album is required\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"title\">Title</label>\n        <input type=\"text\" class=\"form-control\" id=\"title\" required\n               [(ngModel)]=\"model.title\" name=\"title\" #title=\"ngModel\">\n        <div [hidden]=\"title.valid || title.pristine\"\n             class=\"alert alert-danger\">\n          Title is required\n        </div>\n      </div>\n\n      <!--div class=\"form-group\">\n        <label for=\"power\">Hero Power</label>\n        <select class=\"form-control\" id=\"power\"\n                required\n                [(ngModel)]=\"model.power\" name=\"power\"\n                #power=\"ngModel\">\n          <option *ngFor=\"let pow of powers\" [value]=\"pow\">{{pow}}</option>\n        </select>\n        <div [hidden]=\"power.valid || power.pristine\" class=\"alert alert-danger\">\n          Power is required\n        </div>\n      </div-->\n\n      <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"!singleTrackForm.form.valid\" (click)=\"scrobbleTrack();\">Submit</button>\n      <!--button type=\"button\" class=\"btn btn-default\" (click)=\"scrobbleTrack(); singleTrackForm.reset()\">New Hero</button-->\n\n     <!-- NOT SHOWN IN DOCS -->\n      <!--div>\n        <hr>\n        Name via form.controls = {{showFormControls(singleTrackForm)}}\n      </div-->\n     <!-- - -->\n    </form>\n  </div>\n\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}